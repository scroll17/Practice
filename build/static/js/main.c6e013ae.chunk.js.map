{"version":3,"sources":["pages/MainPage/MainPage.module.sass","components/ProductList/Product/Product.module.sass","pages/BasketPage/BasketPage.module.sass","components/Header/Header.module.sass","components/Buttons/ProductButton/ProductButton.module.sass","components/Header/SearchInput/SearchInput.module.sass","components/ProductList/ProductList.module.sass","boot/browserHistory.js","components/ProductList/Product/Product.js","components/Buttons/ProductButton/ProductButton.js","actions/actionsTypes/actionsTypes.js","actions/actionCreators/actionCreators.js","components/Buttons/BuyProduct/BuyProduct.js","components/ProductList/ProductList.js","pages/MainPage/MainPage.js","components/Buttons/DeleteProduct/DeleteProduct.js","utils/sortDate.js","pages/BasketPage/BasketPage.js","components/Header/SearchInput/SearchInput.js","constants/url.js","reducers/mainReducer.js","utils/restoreValues.js","reducers/index.js","sagas/mainSaga.js","sagas/rootSaga.js","boot/config.js","constants/index.js","components/Header/Header.js","App.js","boot/store.js","serviceWorker.js","index.js"],"names":["module","exports","browserHistory","createBrowserHistory","Product","props","data","children","className","style","product","img","src","alt","text","price","connect","state","basket","mainReducer","upCount","downCount","count","additionalText","useEffect","sessionStorage","setItem","JSON","stringify","standardStructure","productButton","onClick","additionalBlock","ADD_PRODUCT_TO_BASKET","DELETE_PRODUCT_FROM_BASKET","PRODUCT_SEARCH","MAIN_ERROR","PRODUCT_FOUND","NEW_PRODUCT_IN_A_BASKET","clearProductFound","productFound","type","ACTION","dispatch","addProductToBasket","item","col","useState","setCount","ProductList","products","list","map","key","id","MainPage","categories","category","size","section","title","icon","main","this","renderFoundProduct","renderAllCategories","allProduct","Component","deleteProductFromBasket","backgroundColor","sortArrayDate","dateNow","dateThen","moment","sortObjectDate","objectNow","objectThen","date","BasketPage","listWithDate","forEach","format","isUndefined","push","Object","keys","sort","sortProductInBasket","container","width","MainPageStyle","renderProducts","productSearch","string","location","useLocation","inputRef","useRef","current","value","pathname","searchInput","ref","placeholder","autoComplete","button","URL","HOME","BASKET","initialState","parse","getItem","error","appReducer","combineReducers","action","rootReducer","addProductToBasketSaga","deleteProductFromBasketSaga","productSearchSaga","select","oldBasket","newBasket","cloneDeep","productIndex","findLastIndex","productDate","nowDate","isSame","toast","success","position","POSITION","TOP_RIGHT","put","splice","arrayToSearch","history","categoriesWithProducts","productString","toLowerCase","findString","includes","rootSaga","takeLatest","sagaMiddleware","createSagaMiddleware","STORE","middleware","store","createStore","combinedReducers","compose","applyMiddleware","run","config","LOGO_SRC","header","to","logo","isEmpty","listen","_","App","exact","path","component","configure","autoClose","closeOnClick","Store","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,4B,mBCA1DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,KAAO,sBAAsB,IAAM,uB,mBCAvHD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,yBAAyB,KAAO,2B,mBCAnGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,KAAO,uB,mBCAzFD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,gBAAkB,yC,mBCAzFD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,8B,m1LCA1ED,EAAOC,QAAU,CAAC,KAAO,4B,4MCGVC,EAFQC,c,0DC8BRC,MA5Bf,SAAiBC,GAAQ,IACbC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SAEd,OACI,wBAAIC,UAAWC,IAAMC,SACjB,6BACI,uBAAGF,UAAWC,IAAME,KAChB,yBAAKC,IAAKN,EAAKM,IAAKC,IAAKP,EAAKQ,QAGlC,uBAAGN,UAAWC,IAAMK,MACfR,EAAKQ,MAGV,uBAAGN,UAAWC,IAAMM,OACfT,EAAKS,MACN,uBAAGP,UAAU,oBAGhBD,K,yBCuBjB,IAGeS,eAHS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,YAAYD,UAEfF,EA3Cf,SAAuBX,GAAQ,IACnBa,EAAsDb,EAAtDa,OAAQE,EAA8Cf,EAA9Ce,QAASC,EAAqChB,EAArCgB,UAAWC,EAA0BjB,EAA1BiB,MAAOC,EAAmBlB,EAAnBkB,eAE3CC,qBAAU,WACNC,eAAeC,QAAQ,SAAUC,KAAKC,UAAUV,MACjD,CAACA,IAEJ,IAAMW,EACF,yBAAKrB,UAAWC,IAAMqB,eAEjBzB,EAAME,SAEP,2BACKe,GAGL,2BACI,uBAAGd,UAAU,cACVuB,QAASX,IAEZ,uBAAGZ,UAAU,eACVuB,QAASV,MAMxB,OAAGE,EAEK,yBAAKf,UAAWC,IAAMuB,iBAClB,2BAAIT,GACHM,GAIFA,KCzCA,GAEXI,sBAAuB,wBACvBC,2BAA4B,6BAC5BC,eAAgB,iBAGhBC,WAAY,aACZC,cAAe,gBACfC,wBAAyB,2BCUhBC,EAAoB,eAACC,EAAD,uDAAgB,GAAhB,MAAwB,CACrDC,KAAMC,EAAOL,cACbG,iBCuBJ,IAIexB,eAJS,SAACC,GAAD,MAAY,MACT,SAAA0B,GAAQ,MAAK,CACpCC,mBAAoB,SAACC,EAAMC,GAAP,OAAeH,ED5CL,SAACE,GAAD,IAAOC,EAAP,uDAAa,EAAb,MAAoB,CAClDL,KAAMC,EAAOT,sBACbY,OACAC,OCyC4CF,CAAmBC,EAAMC,QAE1D9B,EAxCf,SAAoBX,GAAQ,IAChBC,EAASD,EAATC,KADe,EAGGyC,mBAAS,GAHZ,mBAGhBzB,EAHgB,KAGT0B,EAHS,KA0BvB,OACI,kBAAC,EAAD,CAAe1B,MAAOA,EAAOD,UAhBf,WAEV2B,EADS,IAAV1B,EACW,EAEA,SAAAA,GAAK,OAAIA,EAAQ,KAYoBF,QArBvC,WACZ4B,GAAS,SAAA1B,GAAK,OAAIA,EAAQ,OAqBtB,uBAAGS,QARQ,WACf1B,EAAMuC,mBAAmBtC,EAAMgB,GAC/B0B,EAAS,KAML,yDCZGC,MAjBf,SAAqB5C,GAAQ,IACjB6C,EAAa7C,EAAb6C,SAER,OACI,wBAAI1C,UAAWC,IAAM0C,MAChBD,EAASE,KAAK,SAAA1C,GAAO,OAClB,kBAAC,EAAD,CACIJ,KAAMI,EACN2C,IAAK3C,EAAQ4C,IAEb,kBAAC,EAAD,CAAYhD,KAAMI,U,QCRhC6C,E,4LAEkBC,GAEhB,OAAOA,EAAWJ,KAAK,SAAAK,GAEnB,OAAGC,eAAKD,GAAY,EAEZ,yBAAKjD,UAAWC,IAAMkD,QAASN,IAAKI,EAASG,OACzC,4BACI,uBAAGpD,UAAWiD,EAASI,OACtBJ,EAASG,OAEd,kBAAC,EAAD,CAAaV,SAAUO,EAASP,YAIjC,U,yCAMAA,GACf,OACI,yBAAK1C,UAAWC,IAAMkD,SAClB,kBAAC,EAAD,CAAaT,SAAUA,O,+BAO/B,OACI,yBAAK1C,UAAWC,IAAMqD,MAElB,8BAEQJ,eAAKK,KAAK1D,MAAMmC,cAAgB,EAC5BuB,KAAKC,mBAAmBD,KAAK1D,MAAMmC,cAEnCuB,KAAKE,oBAAoBF,KAAK1D,MAAM6D,kB,GAzCzCC,aAuDRnD,eAJS,SAACC,GAAD,MAAY,CAChCiD,WAAYjD,EAAME,YAAY+C,WAC9B1B,aAAcvB,EAAME,YAAYqB,gBAErBxB,CAAyBuC,G,iBCZxC,IAIevC,eAJS,SAACC,GAAD,MAAY,MACT,SAAA0B,GAAQ,MAAK,CACpCyB,wBAAyB,SAACvB,EAAMC,GAAP,OAAeH,EJ9CL,SAACE,GAAD,IAAOC,EAAP,uDAAa,EAAb,MAAoB,CACvDL,KAAMC,EAAOR,2BACbW,OACAC,OI2CiDsB,CAAwBvB,EAAMC,QAEpE9B,EA/Cf,SAAuBX,GAAQ,IACnBC,EAASD,EAATC,KADkB,EAGAyC,mBAAS,GAHT,mBAGnBzB,EAHmB,KAGZ0B,EAHY,KA4B1B,OACI,kBAAC,EAAD,CACI1B,MAAOA,EACPD,UAhBU,WAEV2B,EADS,IAAV1B,EACW,EAEA,SAAAA,GAAK,OAAIA,EAAQ,KAa3BF,QA1BQ,WACTE,IAAUhB,EAAKwC,IACdE,EAAS1C,EAAKwC,KAEdE,GAAS,SAAA1B,GAAK,OAAIA,EAAQ,MAuB1BC,eAAc,gDAAajB,EAAKwC,MAEhC,uBAAGf,QAZW,WAClB1B,EAAM+D,wBAAwB9D,EAAMgB,GACpC0B,EAAS,IAUsBvC,MAAO,CAAC4D,gBAAiB,QAApD,wD,iBCxCCC,EAAgB,SAACC,EAASC,GAEnC,OAAQC,IAAOD,EAJJ,cAIwBC,IAAOF,EAJ/B,eAOFG,EAAiB,SAACC,EAAWC,GACtC,IAAML,EAAUI,EAAUE,KACpBL,EAAWI,EAAWC,KAE5B,OAAQJ,IAAOD,GAAYC,IAAOF,ICIhCO,E,uLAEa5B,GACX,IAAM6B,EAAe,GAgBrB,OAdA7B,EAAS8B,SAAS,SAACtE,GACf,IAAMmE,EAAOJ,IAAO/D,EAAQmE,MAAMI,OAAO,cAEtCC,sBAAYH,EAAaF,IACxBE,EAAaF,GAAQ,CAACnE,GAEtBqE,EAAaF,GAAMM,KAAKzE,MAMJ0E,OAAOC,KAAKN,GAAcO,KAAKhB,GAEhClB,KAAI,SAAAyB,GAC3B,IAAMU,EAAsBR,EAAaF,GAAMS,KAAKZ,GAEpD,OACI,yBAAKrB,IAAKwB,EAAMrE,UAAWC,IAAM+E,WAC7B,wBAAIhF,UAAWC,IAAMoE,MAChBA,GAGL,wBAAIrE,UAAWC,IAAM0C,MAChBoC,EAAoBnC,KAAK,SAAA1C,GAEtB,OACI,kBAAC,EAAD,CACIJ,KAAMI,EACN2C,IAAK3C,EAAQ4C,IAEb,yBAAK7C,MAAO,CAACgF,MAAO,SAChB,kBAAC,EAAD,CAAenF,KAAMI,IACrB,kBAAC,EAAD,CAAYJ,KAAMI,gB,+BAalD,OACI,yBAAKF,UAAWkF,IAAc5B,MACzBJ,eAAKK,KAAK1D,MAAMmC,cAAgB,EAC7BuB,KAAK4B,eAAe5B,KAAK1D,MAAMmC,cAE/BuB,KAAK4B,eAAe5B,KAAK1D,MAAMa,a,GAxD1BiD,aAmEVnD,eAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,YAAYD,OAC1BsB,aAAcvB,EAAME,YAAYqB,gBAErBxB,CAAyB8D,G,kCCrCxC,IAKe9D,eALS,SAACC,GAAD,MAAY,MACT,SAAA0B,GAAQ,MAAK,CACpCiD,cAAe,SAACC,GAAD,OAAYlD,EPnCF,SAACkD,GAAD,MAAa,CACtCpD,KAAMC,EAAOP,eACb0D,UOiCoCD,CAAcC,KAClDtD,kBAAmB,kBAAMI,EAASJ,SAEvBvB,EA5Cf,SAAqBX,GACjB,IAAIyF,EAAWC,cACTC,EAAWC,iBAAO,MAoBxB,OANAzE,qBAAU,WACkB,OAArBwE,EAASE,UACRF,EAASE,QAAQC,MAAQ,QAE9B,CAACL,EAASM,WAGT,yBAAK5F,UAAWC,IAAM4F,aAClB,2BACI,2BACIC,IAAKN,EACLO,YAAa,+BACbC,aAAc,QAElB,uBAAGhG,UAAU,sBAAsBuB,QArBtB,WACG,OAArBiE,EAASE,UACRF,EAASE,QAAQC,MAAQ,KACzB9F,EAAMkC,yBAoBN,yBAAK/B,UAAWC,IAAMgG,OAAQ1E,QA5BlB,WAChB,IAAM8D,EAASG,EAASE,QAAQC,MAChC9F,EAAMuF,cAAcC,KA0BhB,sC,QCxCCa,EAAM,CACfC,KAAM,IACNC,OAAQ,W,qlBCGZ,ICL8B/D,GDKxBgE,GAAe,CACjB3C,W,OAA0B,GAC1B1B,aAAc,GACdtB,QCR0B2B,GDQJ,SCPflB,KAAKmF,MAAMrF,eAAesF,QAAQlE,MDON,IACnCmE,MAAO,MELLC,GAAaC,YAAgB,CAC/B/F,YFOW,WAAyC,IAA/BF,EAA8B,uDAAtB4F,GAAcM,EAAQ,uCACnD,OAAQA,EAAO1E,MACX,KAAKC,EAAOJ,wBACR,OAAO,GAAP,GACOrB,EADP,CAEIC,OAAQiG,EAAOjG,OACf8F,MAAO,OAGf,KAAKtE,EAAOL,cACR,OAAO,GAAP,GACOpB,EADP,CAEIuB,aAAc2E,EAAO3E,aACrBwE,MAAO,OAGf,QACI,OAAO/F,MEpBJmG,GADK,SAACnG,EAAOkG,GAAR,OAAmBF,GAAWhG,EAAOkG,I,mECMxCE,K,aA8CAC,I,aA8BAC,I,6jBA5EV,SAAUF,GAAV,yFAGgD,OAHdxE,EAAlC,EAAkCA,KAAMC,EAAxC,EAAwCA,IAAxC,kBAGsD0E,eAHtD,OAuCC,OAvCD,SAGgCC,EAHhC,EAGStG,YAAeD,OAEjBwG,EAAYC,oBAAUF,IACtBG,EAAeC,wBAAeH,GAAW,SAAAhH,GAAO,OAAIA,EAAQ4C,KAAOT,EAAKS,QAE3D,GACTwE,EAAcrD,IAAOiD,EAAUE,GAAc/C,MAC7CkD,EAAUtD,MAEbqD,EAAYE,OAAOD,EAAS,SAE3BL,EAAUE,GAAc9E,KAAOA,EAC/B4E,EAAUE,GAAc/C,KAAOJ,OAI/BiD,EAAUvC,KAAV,MACOtC,EADP,CAEIC,MACA+B,KAAMJ,UAKdiD,EAAUvC,KAAV,MACOtC,EADP,CAEIC,MACA+B,KAAMJ,SAIdwD,KAAMC,QAAQ,2GAAuB,CACjCC,SAAUF,KAAMG,SAASC,YAnC9B,UAuCOC,aAAI,CAAC7F,KAAMC,EAAOJ,wBAAyBpB,OAAQwG,IAvC1D,gCA0CC,OA1CD,oCA0COY,aAAI,CAAC7F,KAAMC,EAAON,WAAY4E,MAAM,EAAD,KA1C1C,uDA8CA,SAAUM,GAAV,mFAGgD,OAHTzE,EAAvC,EAAuCA,KAAMC,EAA7C,EAA6CA,IAA7C,kBAGsD0E,eAHtD,OAuBC,OAvBD,SAGgCC,EAHhC,EAGStG,YAAeD,QAGjBwG,EAAYC,oBAAUF,IAClBzC,SAAS,SAACtE,EAAS4C,GACvB5C,EAAQ4C,KAAOT,EAAKS,KAChB5C,EAAQoC,KAAOA,EAEd4E,EAAUa,OAAOjF,EAAI,GAGrBoE,EAAUpE,GAAIR,KAAOA,MAKhCmF,KAAMjB,MAAM,+FAAqB,CAC7BmB,SAAUF,KAAMG,SAASC,YApB9B,UAuBOC,aAAI,CAAC7F,KAAMC,EAAOJ,wBAAyBpB,OAAQwG,IAvB1D,gCA0BC,OA1BD,oCA0BOY,aAAI,CAAC7F,KAAMC,EAAON,WAAY4E,MAAM,EAAD,KA1B1C,uDA8BA,SAAUO,GAAV,uFAGiD,OAHpB1B,EAA7B,EAA6BA,OAA7B,kBAGuD2B,eAHvD,OA6BC,OA7BD,aAGSrG,YAAe+C,EAHxB,EAGwBA,WAAYhD,EAHpC,EAGoCA,OAE7BsB,EAAe,GACjBgG,EAAgB,GAGjBC,EAAQ3C,SAASM,WAAaM,EAAIC,KACjCzC,EAAWc,SAAS,SAAA0D,GAA2B,IAAD,GAC1C,EAAAF,GAAcrD,KAAd,qBAAsBuD,EAAuBxF,cAGjDsF,EAAa,aAAOtH,GAIxBsH,EAAcxD,SAAS,SAAAtE,GAEnB,IAAMiI,EAAgBjI,EAAQI,KAAK8H,cAC7BC,EAAahD,EAAO+C,cAEvBD,EAAcG,SAASD,IACtBrG,EAAa2C,KAAKzE,MAxB3B,UA6BO4H,aAAI,CAAC7F,KAAMC,EAAOL,cAAeG,iBA7BxC,gCAgCC,OAhCD,oCAgCO8F,aAAI,CAAC7F,KAAMC,EAAON,WAAY4E,MAAM,EAAD,KAhC1C,uD,iBCjFG+B,IAAV,SAAUA,KAAV,kEAEI,OAFJ,SAEUC,aAAWtG,EAAOT,sBAAuBoF,IAFnD,OAGI,OAHJ,SAGU2B,aAAWtG,EAAOR,2BAA4BoF,IAHxD,OAKI,OALJ,SAKU0B,aAAWtG,EAAOP,eAAgBoF,IAL5C,wCASewB,UCZTE,GAAiBC,cCHvB,IAAMC,GDKS,WACb,IAAMC,EAAa,CACjBH,IAGII,EAAQC,YAAYC,GAAkBC,YAAQC,IAAe,WAAf,EAAmBL,KAEvE,OADAH,GAAeS,IAAIX,GAAUM,EAAM1G,UAC5B0G,ECZKM,GAERC,GAAW,6DC6BjB,IAGe5I,gBAHS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,YAAYD,UAEfF,EAxBf,SAAgBX,GAEZ,OACI,gCACI,yBAAKG,UAAWC,IAAMoJ,QAClB,kBAAC,IAAD,CAAMC,GAAIpD,EAAIC,KAAMnG,UAAWC,IAAMsJ,MACjC,yBAAKnJ,IAAKgJ,GAAU/I,IAAK,MAE7B,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAMiJ,GAAIpD,EAAIE,OAAQpG,UAAWC,IAAMS,QAClC8I,kBAAQ3J,EAAMa,QACX,KAEA,8BAAOwC,eAAKrD,EAAMa,SAEtB,uBAAGV,UAAU,uBCfjCiI,EAAQwB,QAAO,SAAAC,GACXf,GAAMxG,SAASJ,Q,IAwBJ4H,G,iLAlBP,OACI,kBAAC,IAAD,CAAQ1B,QAASA,GAEb,kBAAC,GAAD,MAEA,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAM3D,EAAIC,KAAM2D,UAAW/G,IAExC,kBAAC,IAAD,CAAO8G,KAAM3D,EAAIE,OAAQ0D,UAAWxF,U,GAZtCX,aCRlB8D,KAAMsC,UAAU,CACZC,UAAW,IACXC,cAAc,IAUHC,OAPf,WACE,OACI,kBAAC,IAAD,CAAUrB,MAAQF,IAChB,kBAAC,GAAD,QCLYwB,QACW,cAA7BC,OAAO9E,SAAS+E,UAEe,UAA7BD,OAAO9E,SAAS+E,UAEhBD,OAAO9E,SAAS+E,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c6e013ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MainPage_main__2e9u6\",\"section\":\"MainPage_section__1fBhQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product\":\"Product_product__1iPuE\",\"price\":\"Product_price__1Io9L\",\"text\":\"Product_text__2Vq3m\",\"img\":\"Product_img__3wwoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BasketPage_container__-wWe8\",\"date\":\"BasketPage_date__2NNcP\",\"list\":\"BasketPage_list__3DmYL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__JleW2\",\"basket\":\"Header_basket__Xl7Q4\",\"logo\":\"Header_logo__3Yyyg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productButton\":\"ProductButton_productButton__1nWi2\",\"additionalBlock\":\"ProductButton_additionalBlock__3rwTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"SearchInput_searchInput__1Lygp\",\"button\":\"SearchInput_button__2g67N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ProductList_list__2wuB8\"};","import { createBrowserHistory } from \"history\";\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import React from \"react\"\nimport style from './Product.module.sass';\n\n\nfunction Product(props) {\n    const { data, children } = props;\n\n    return(\n        <li className={style.product}>\n            <div>\n                <p className={style.img}>\n                    <img src={data.src} alt={data.text}/>\n                </p>\n\n                <p className={style.text}>\n                    {data.text}\n                </p>\n\n                <p className={style.price}>\n                    {data.price}\n                    <i className=\"fas fa-hryvnia\" />\n                </p>\n\n                {children}\n\n            </div>\n        </li>\n    )\n\n}\n\n\nexport default Product;\n","import React, { useEffect } from \"react\"\nimport style from './ProductButton.module.sass'\n\nimport connect from \"react-redux/es/connect/connect\";\n\n\nfunction ProductButton(props) {\n    const { basket, upCount, downCount, count, additionalText } = props;\n\n    useEffect(() => {\n        sessionStorage.setItem(\"basket\", JSON.stringify(basket))\n    }, [basket]);\n\n    const standardStructure = (\n        <div className={style.productButton}>\n\n            {props.children}\n\n            <p>\n                {count}\n            </p>\n\n            <p>\n                <i className=\"fas fa-plus\"\n                   onClick={upCount}\n                />\n                <i className=\"fas fa-minus\"\n                   onClick={downCount}\n                />\n            </p>\n        </div>\n    );\n\n    if(additionalText){\n        return (\n            <div className={style.additionalBlock}>\n                <p>{additionalText}</p>\n                {standardStructure}\n            </div>\n        )\n    }else{\n        return standardStructure\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    basket: state.mainReducer.basket\n});\nexport default connect(mapStateToProps)(ProductButton);\n","export default {\n    // MIDDLEWARE\n    ADD_PRODUCT_TO_BASKET: \"ADD_PRODUCT_TO_BASKET\",\n    DELETE_PRODUCT_FROM_BASKET: \"DELETE_PRODUCT_FROM_BASKET\",\n    PRODUCT_SEARCH: \"PRODUCT_SEARCH\",\n\n    // REDUCERS\n    MAIN_ERROR: \"MAIN_ERROR\",\n    PRODUCT_FOUND: \"PRODUCT_FOUND\",\n    NEW_PRODUCT_IN_A_BASKET: \"NEW_PRODUCT_IN_A_BASKET\"\n};\n","import ACTION from '../actionsTypes/actionsTypes';\n\nexport const addProductToBasket = (item, col = 1) => ({\n    type: ACTION.ADD_PRODUCT_TO_BASKET,\n    item,\n    col\n});\n\nexport const deleteProductFromBasket = (item, col = 1) => ({\n    type: ACTION.DELETE_PRODUCT_FROM_BASKET,\n    item,\n    col\n});\n\nexport const productSearch = (string) => ({\n    type: ACTION.PRODUCT_SEARCH,\n    string\n});\n\nexport const clearProductFound = (productFound = []) => ({\n    type: ACTION.PRODUCT_FOUND,\n    productFound\n});","import React, { useState } from \"react\"\n\nimport connect from \"react-redux/es/connect/connect\";\n\nimport ProductButton from \"../ProductButton/ProductButton\";\n\nimport { addProductToBasket } from \"../../../actions/actionCreators/actionCreators\";\n\nfunction BuyProduct(props) {\n    const { data } = props;\n\n    const [count, setCount] = useState(1);\n\n\n    const upCount = () => {\n        setCount(count => count + 1)\n    };\n\n\n    const downCount = () => {\n        if(count === 1){\n            setCount( 1)\n        }else {\n            setCount( count => count - 1)\n        }\n    };\n\n\n    const buyProduct = () => {\n        props.addProductToBasket(data, count);\n        setCount(1);\n    };\n\n\n    return (\n        <ProductButton count={count} downCount={downCount} upCount={upCount}>\n            <p onClick={buyProduct}>\n                До кошику\n            </p>\n        </ProductButton>\n    )\n\n}\n\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = dispatch => ({\n    addProductToBasket: (item, col) => dispatch(addProductToBasket(item, col)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyProduct);\n","import React from \"react\"\nimport style from './ProductList.module.sass'\n\nimport Product from \"./Product/Product\";\nimport BuyProduct from \"../Buttons/BuyProduct/BuyProduct\";\n\n\nfunction ProductList(props) {\n    const { products } = props;\n\n    return(\n        <ul className={style.list}>\n            {products.map( product => (\n                <Product\n                    data={product}\n                    key={product.id}\n                >\n                    <BuyProduct data={product}/>\n                </Product>\n            ))}\n        </ul>\n    )\n\n}\nexport default ProductList","import React, { Component } from 'react';\nimport style from \"./MainPage.module.sass\"\n\nimport connect from \"react-redux/es/connect/connect\";\n\nimport ProductList from \"../../components/ProductList/ProductList\";\n\nimport { size } from \"lodash\"\n\nclass MainPage extends Component{\n\n    renderAllCategories(categories){\n\n        return categories.map( category => {\n\n            if(size(category) > 0){\n                return(\n                    <div className={style.section} key={category.title}>\n                        <h2>\n                            <i className={category.icon} />\n                            {category.title}\n                        </h2>\n                        <ProductList products={category.products}/>\n                    </div>\n                )\n            }else {\n                return null\n            }\n\n        })\n    }\n\n    renderFoundProduct(products){\n        return (\n            <div className={style.section}>\n                <ProductList products={products}/>\n            </div>\n        )\n    }\n\n    render() {\n\n        return (\n            <div className={style.main}>\n\n                <main>\n                    {\n                        size(this.props.productFound) > 0 ?\n                            this.renderFoundProduct(this.props.productFound)\n                            :\n                            this.renderAllCategories(this.props.allProduct)\n                    }\n                </main>\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    allProduct: state.mainReducer.allProduct,\n    productFound: state.mainReducer.productFound\n});\nexport default connect(mapStateToProps)(MainPage);\n","import React, { useState } from \"react\"\n\nimport connect from \"react-redux/es/connect/connect\";\n\nimport ProductButton from \"../ProductButton/ProductButton\";\n\nimport { deleteProductFromBasket } from \"../../../actions/actionCreators/actionCreators\";\n\n\nfunction DeleteProduct(props) {\n    const { data } = props;\n\n    const [count, setCount] = useState(1);\n\n\n    const upCount = () => {\n        if(count === data.col){\n            setCount(data.col)\n        }else {\n            setCount(count => count + 1)\n        }\n    };\n\n\n    const downCount = () => {\n        if(count === 1){\n            setCount( 1)\n        }else {\n            setCount( count => count - 1)\n        }\n    };\n\n    const deleteProduct = () => {\n        props.deleteProductFromBasket(data, count);\n        setCount(1)\n    };\n\n    return (\n        <ProductButton\n            count={count}\n            downCount={downCount}\n            upCount={upCount}\n            additionalText={`Всього: ${data.col}`}\n        >\n            <p onClick={deleteProduct} style={{backgroundColor: \"red\"}}>\n                Видалити\n            </p>\n        </ProductButton>\n    )\n\n}\n\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = dispatch => ({\n    deleteProductFromBasket: (item, col) => dispatch(deleteProductFromBasket(item, col)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteProduct);\n","import moment from \"moment\";\n\nconst format = \"YYYY DD MM\";\n\nexport const sortArrayDate = (dateNow, dateThen) => {\n\n    return  moment(dateThen, format) - moment(dateNow, format)\n};\n\nexport const sortObjectDate = (objectNow, objectThen) => {\n    const dateNow = objectNow.date;\n    const dateThen = objectThen.date;\n\n    return  moment(dateThen) - moment(dateNow)\n};","import React, { Component } from 'react';\n\nimport style from \"./BasketPage.module.sass\";\nimport MainPageStyle from \"../MainPage/MainPage.module.sass\"\n\nimport Product from \"../../components/ProductList/Product/Product\";\n\nimport connect from \"react-redux/es/connect/connect\";\nimport BuyProduct from \"../../components/Buttons/BuyProduct/BuyProduct\";\nimport DeleteProduct from \"../../components/Buttons/DeleteProduct/DeleteProduct\";\n\nimport { sortArrayDate, sortObjectDate } from \"../../utils/sortDate\"\n\nimport { size, isUndefined } from \"lodash\"\n\nimport moment from \"moment\"\n\nclass BasketPage extends Component{\n\n    renderProducts(products){\n        const listWithDate = {};\n\n        products.forEach( (product) => {\n            const date = moment(product.date).format(\"YYYY DD MM\");\n\n            if(isUndefined(listWithDate[date])){\n                listWithDate[date] = [product]\n            }else{\n                listWithDate[date].push(product)\n            }\n\n        });\n\n\n        const arrayOfDateProducts = Object.keys(listWithDate).sort(sortArrayDate);\n\n        return arrayOfDateProducts.map(date => {\n            const sortProductInBasket = listWithDate[date].sort(sortObjectDate)\n\n            return(\n                <div key={date} className={style.container}>\n                    <h1 className={style.date}>\n                        {date}\n                    </h1>\n\n                    <ul className={style.list}>\n                        {sortProductInBasket.map( product => {\n\n                            return (\n                                <Product\n                                    data={product}\n                                    key={product.id}\n                                >\n                                    <div style={{width: \"100%\"}}>\n                                        <DeleteProduct data={product} />\n                                        <BuyProduct data={product} />\n                                    </div>\n                                </Product>\n                            )\n                        })}\n                    </ul>\n                </div>\n            )\n        });\n\n    }\n\n    render() {\n        return (\n            <div className={MainPageStyle.main}>\n                {size(this.props.productFound) > 0 ?\n                    this.renderProducts(this.props.productFound)\n                    :\n                    this.renderProducts(this.props.basket)\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    basket: state.mainReducer.basket,\n    productFound: state.mainReducer.productFound\n});\nexport default connect(mapStateToProps)(BasketPage);\n","import React, { useRef, useEffect } from \"react\";\nimport style from './SearchInput.module.sass'\n\nimport connect from \"react-redux/es/connect/connect\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { productSearch, clearProductFound } from \"../../../actions/actionCreators/actionCreators\";\n\nfunction SearchInput(props) {\n    let location = useLocation();\n    const inputRef = useRef(null);\n\n    const findProduct = () => {\n        const string = inputRef.current.value;\n        props.productSearch(string);\n    };\n\n    const clearFindProduct = () => {\n        if(inputRef.current !== null){\n            inputRef.current.value = null;\n            props.clearProductFound()\n        }\n    };\n\n    useEffect(() => {\n        if(inputRef.current !== null) {\n            inputRef.current.value = null;\n        }\n    }, [location.pathname]);\n\n    return(\n        <div className={style.searchInput}>\n            <p>\n                <input\n                    ref={inputRef}\n                    placeholder={\"Я ищу...\"}\n                    autoComplete={\"off\"}\n                />\n                <i className=\"far fa-times-circle\" onClick={clearFindProduct}/>\n            </p>\n            <div className={style.button} onClick={findProduct}>\n                Найти\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = dispatch => ({\n    productSearch: (string) => dispatch(productSearch(string)),\n    clearProductFound: () => dispatch(clearProductFound())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput);","export const URL = {\n    HOME: '/',\n    BASKET: \"/basket\"\n};\n","import ACTION from '../actions/actionsTypes/actionsTypes';\n\nimport { CATEGORIES } from \"../utils/textForPages\"\nimport { restoreValues } from \"../utils/restoreValues\";\n\nconst initialState = {\n    allProduct: CATEGORIES || [],\n    productFound: [],\n    basket: restoreValues(\"basket\") || [],\n    error: null\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ACTION.NEW_PRODUCT_IN_A_BASKET: {\n            return {\n                ...state,\n                basket: action.basket,\n                error: null\n            }\n        }\n        case ACTION.PRODUCT_FOUND: {\n            return {\n                ...state,\n                productFound: action.productFound,\n                error: null\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n\n","export const restoreValues = (item) => {\n    return JSON.parse(sessionStorage.getItem(item))\n};","import { combineReducers } from 'redux';\n\nimport mainReducer from './mainReducer'\n\nconst appReducer = combineReducers({\n    mainReducer\n});\n\nconst rootReducer = (state, action) => appReducer(state, action);\nexport default rootReducer;\n","import ACTION from \"../actions/actionsTypes/actionsTypes\";\n\nimport { put, select } from 'redux-saga/effects';\n\nimport { cloneDeep, findLastIndex } from \"lodash\"\n\nimport moment from \"moment\"\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport history from \"../boot/browserHistory\";\nimport { URL } from \"../constants\";\n\nexport function* addProductToBasketSaga({item, col}) {\n    try {\n\n        const { mainReducer: { basket: oldBasket } } = yield select();\n\n        const newBasket = cloneDeep(oldBasket);\n        const productIndex = findLastIndex( newBasket, product => product.id === item.id);\n\n        if(productIndex >= 0){\n            const productDate = moment(newBasket[productIndex].date);\n            const nowDate = moment();\n\n            if(productDate.isSame(nowDate, \"days\")){\n\n                newBasket[productIndex].col += col;\n                newBasket[productIndex].date = moment()\n\n            }else{\n\n                newBasket.push({\n                    ...item,\n                    col,\n                    date: moment()\n                });\n            }\n        }else{\n\n            newBasket.push({\n                ...item,\n                col,\n                date: moment()\n            });\n        }\n\n        toast.success(\"Добавлено до кошику\", {\n            position: toast.POSITION.TOP_RIGHT\n        });\n\n\n        yield put({type: ACTION.NEW_PRODUCT_IN_A_BASKET, basket: newBasket});\n\n    } catch (e) {\n        yield put({type: ACTION.MAIN_ERROR, error: e})\n    }\n}\n\nexport function* deleteProductFromBasketSaga({item, col}) {\n    try {\n\n        const { mainReducer: { basket: oldBasket } } = yield select();\n\n\n        const newBasket = cloneDeep(oldBasket);\n        newBasket.forEach( (product, id) => {\n           if(product.id === item.id){\n               if(product.col <= col){\n\n                   newBasket.splice(id, 1);\n\n               }else {\n                   newBasket[id].col -= col;\n               }\n           }\n        });\n\n        toast.error(\"Видалено з кошику\", {\n            position: toast.POSITION.TOP_RIGHT\n        });\n\n        yield put({type: ACTION.NEW_PRODUCT_IN_A_BASKET, basket: newBasket});\n\n    } catch (e) {\n        yield put({type: ACTION.MAIN_ERROR, error: e})\n    }\n}\n\nexport function* productSearchSaga({string}) {\n    try {\n\n        const { mainReducer: { allProduct, basket } } = yield select();\n\n        const productFound = [];\n        let arrayToSearch = [];\n\n\n        if(history.location.pathname === URL.HOME){\n            allProduct.forEach( categoriesWithProducts => {\n                arrayToSearch.push(...categoriesWithProducts.products);\n            });\n        }else{\n            arrayToSearch = [...basket]\n        }\n\n\n        arrayToSearch.forEach( product => {\n\n            const productString = product.text.toLowerCase();\n            const findString = string.toLowerCase();\n\n            if(productString.includes(findString)){\n                productFound.push(product)\n            }\n        });\n\n\n        yield put({type: ACTION.PRODUCT_FOUND, productFound});\n\n    } catch (e) {\n        yield put({type: ACTION.MAIN_ERROR, error: e})\n    }\n}\n","import { takeLatest } from 'redux-saga/effects';\n\nimport ACTION from '../actions/actionsTypes/actionsTypes';\nimport {\n    addProductToBasketSaga,\n    deleteProductFromBasketSaga,\n    productSearchSaga\n} from './mainSaga'\n\nfunction* rootSaga() {\n\n    yield takeLatest(ACTION.ADD_PRODUCT_TO_BASKET, addProductToBasketSaga);\n    yield takeLatest(ACTION.DELETE_PRODUCT_FROM_BASKET, deleteProductFromBasketSaga);\n\n    yield takeLatest(ACTION.PRODUCT_SEARCH, productSearchSaga);\n\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport combinedReducers from '../reducers';\nimport rootSaga from '../sagas/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default function configureStore() {\n  const middleware = [\n    sagaMiddleware,\n  ];\n\n  const store = createStore(combinedReducers, compose(applyMiddleware(...middleware)));\n  sagaMiddleware.run(rootSaga, store.dispatch);\n  return store;\n}\n","import { URL } from \"./url\";\nimport config from '../boot/config';\n\nconst STORE = config();\n\nconst LOGO_SRC = \"https://static.rozetka.com.ua/assets/img/design/logo_n.svg\";\n\n\n\nexport {\n    STORE,\n    URL,\n\n    LOGO_SRC,\n}","import React from \"react\";\nimport style from './Header.module.sass'\n\nimport connect from \"react-redux/es/connect/connect\";\n\nimport SearchInput from \"./SearchInput/SearchInput\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { URL, LOGO_SRC } from \"../../constants\";\n\nimport { size, isEmpty } from 'lodash'\n\nfunction Header(props) {\n\n    return(\n        <header>\n            <div className={style.header}>\n                <Link to={URL.HOME} className={style.logo}>\n                    <img src={LOGO_SRC} alt={''}/>\n                </Link>\n                <SearchInput />\n                <Link to={URL.BASKET} className={style.basket}>\n                    {isEmpty(props.basket) ?\n                        null\n                        :\n                        <span>{size(props.basket)}</span>\n                    }\n                    <i className=\"fas fa-store\" />\n                </Link>\n            </div>\n        </header>\n    )\n}\nconst mapStateToProps = (state) => ({\n    basket: state.mainReducer.basket,\n});\nexport default connect(mapStateToProps)(Header);\n","import React, {Component} from 'react';\nimport {Router, Route, Switch } from \"react-router-dom\";\n\nimport history from \"./boot/browserHistory\";\n\nimport MainPage from \"./pages/MainPage/MainPage\";\nimport BasketPage from \"./pages/BasketPage/BasketPage\";\n\nimport Header from \"./components/Header/Header\";\n\nimport { URL, STORE } from \"./constants\";\nimport { clearProductFound } from \"./actions/actionCreators/actionCreators\"\n\nhistory.listen(_ => {\n    STORE.dispatch(clearProductFound());\n});\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Router history={history}>\n\n                <Header />\n\n                <Switch>\n\n                    <Route exact path={URL.HOME} component={MainPage} />\n\n                    <Route path={URL.BASKET} component={BasketPage} />\n\n                </Switch>\n\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport App from '../App';\n\nimport { toast } from 'react-toastify';\n\nimport { STORE } from '../constants';\n\ntoast.configure({\n    autoClose: 1000,\n    closeOnClick: true\n});\n\nfunction Store(){\n  return (\n      <Provider store={ STORE }>\n        <App />\n      </Provider>\n  );\n}\nexport default Store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './boot/store';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}